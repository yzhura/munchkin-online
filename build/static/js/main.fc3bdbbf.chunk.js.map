{"version":3,"sources":["firebase/firebase.js","helpers/roomNames/index.js","components/home/index.js","components/home/home.js","components/hooks/useLobby.js","components/loading/index.js","components/loading/loading.js","components/user-card/index.js","components/user-card/user-card.js","components/dice/index.js","components/dice/dice.js","helpers/helperFunctions.js","components/lobby/lobby.js","components/lobby/index.js","components/signin/index.js","components/signin/signin.js","components/modal/index.js","components/modal/modal.js","helpers/imagesPath/index.js","images/ancient.png","images/baby.png","images/crabs.png","images/elf.png","images/geek.png","images/goblin.png","images/goose.png","images/krisotka.png","images/munchkin.png","images/thief.png","images/troll.png","images/warrior.png","images/boromir.jpg","images/frodo.jpg","images/gendalf.jpg","images/gollum.jpg","components/avatars/avatars.js","components/avatars/index.js","components/profile/index.js","components/profile/profile.js","components/error/index.js","components/error/error.js","components/app/app.js","components/error-boundary/error-boundary.js","components/app/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","currentUser","writeUserData","a","uid","displayName","email","photoURL","avatar","nickname","ref","set","error","console","log","userId","child","get","then","snapshot","exists","userData","Object","assign","val","catch","authProvider","GoogleAuthProvider","roomNames","Home","withRouter","history","useState","roomName","setRoomName","user","useContext","GameContext","className","isAnonymous","src","alt","to","onClick","signOut","push","htmlFor","type","id","placeholder","value","onChange","event","target","classList","add","remove","uniqueNamesGenerator","dictionaries","NEW_CHAT_MESSAGE_EVENT","NEW_ROOM_CONNECTION","GENERATE_CUBIC_NUMBER","useLobby","roomId","messages","setMessages","connections","setConnections","timer","setTimer","isRoomDeleted","setRoomDeleted","isRoomClosed","setRoomClose","disconnectedUser","setDisconnectedUser","cubicNumber","setCubicNumber","cubicToggleAnimate","setCubicToggleAnimate","cubicAnimation","setCubicAnimation","socketRef","useRef","useEffect","current","socketIOClient","query","on","closed","disconnectUserId","users","roomTimer","cubic","message","incomingMessage","ownedByCurrentUser","senderId","info","number","setTimeout","emit","disconnect","sendMessage","messageBody","userName","body","sendSkills","userSkills","sendInitConnection","userLevel","userStrength","name","level","strength","photo","sendGenerateNumber","Loading","UserCard","props","disabledLevelDown","disabledStrengthDown","handleSkills","disabled","Dice","toggle","data-roll","data-side","msToTime","duration","seconds","parseInt","minutes","hours","Lobby","match","params","newMessage","setNewMessage","setLevel","setStrength","timerTime","inervalId","setInterval","clearInterval","pathname","state","title","redirectToLink","redirectToText","length","anotherConnectedUsers","filter","player","winner","find","el","action","map","i","SignIn","googleLogin","anonymousLogin","Modal","show","children","save","setModal","disableSave","role","data-dismiss","aria-label","aria-hidden","imagesPathsArr","getRandomPath","Math","floor","random","AvatarConstructor","checked","this","Avatars","chooseAvatar","googlePhoto","avatars","avatarsArr","setAvatars","avatarId","avatarSrc","newAvatars","forEach","toggleChecked","Profile","newPhoto","setNewPhoto","newNickname","setNewNickname","resultText","setResultText","disableBtn","setDisableBtn","modal","Fragment","defaultValue","updatedUser","data","Error","setTitle","setBody","setRedirectToLink","setRedirectToText","location","React","Component","createContext","App","setUser","loading","setLoading","login","setLogin","signInWithPopup","result","credential","accessToken","errorCode","code","errorMessage","signInAnonymously","onAuthStateChanged","randomName","names","getUserData","Provider","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc3bdbbf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDNYv0GNZxYoJNhC9Z7vYxCll92Bs5hK54\",\r\n  authDomain: \"munchkinrealtime.firebaseapp.com\",\r\n  databaseURL: \"https://munchkinrealtime-default-rtdb.firebaseio.com\",\r\n  projectId: \"munchkinrealtime\",\r\n  storageBucket: \"munchkinrealtime.appspot.com\",\r\n  messagingSenderId: \"1028055506111\",\r\n  appId: \"1:1028055506111:web:35385513c03f849b60fa0a\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nlet database = firebase.database();\r\nlet firebaseUser = firebase.auth().currentUser;\r\n\r\nasync function writeUserData({uid, displayName, email, photoURL, avatar, nickname}) {\r\n  try {\r\n    database.ref('users/' + uid).set({\r\n      displayName: displayName,\r\n      email: email,\r\n      photoURL: photoURL,\r\n      avatar: avatar,\r\n      nickname: nickname,\r\n      uid: uid\r\n      // Add more stuff here\r\n    }, (error) => {\r\n      if(error) {\r\n        console.log(error)\r\n      } else {\r\n        console.log('Data saved successfully!');\r\n      }\r\n    });\r\n    return 'Данные сохранены!'\r\n  } catch (error) {\r\n    console.log('error: ', error);\r\n    return 'error'\r\n  }\r\n}\r\n\r\n\r\nasync function getUserData() {\r\n\r\n  let userData;\r\n  let userId = firebase.auth().currentUser.uid;\r\n  if (!userId) {\r\n    return\r\n  }\r\n  await database.ref(\"users\").child(userId).get().then( (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      userData = Object.assign({}, snapshot.val());\r\n    }\r\n    else {\r\n      console.log(\"No data available\");\r\n    }\r\n  }).catch(function(error) {\r\n    console.error(error);\r\n  });\r\n\r\n  return userData;\r\n}\r\n\r\n\r\n\r\nlet authProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {database, authProvider, writeUserData, getUserData}\r\n\r\nexport default firebase;","\r\nconst roomNames = [\r\n  'Аваллонэ',\r\n  'Валинор',\r\n  'Ильмарин',\r\n  'Тирион',\r\n  'Форменос',\r\n  'Ангбанд',\r\n  'Гондолин',\r\n  'Менегрот',\r\n  'Утумно',\r\n  'Химринг',\r\n  'Ондосто',\r\n  'Пеларгир',\r\n  'Роменна',\r\n  'Белегост',\r\n  'Город Гоблинов',\r\n  'Изенгард',\r\n  'Калэмбель',\r\n  'Митлонд',\r\n  'Мория',\r\n  'Ногрод',\r\n  'Осгилиат',\r\n  'Пеларгир',\r\n  'Пригорье',\r\n  'Тарбад',\r\n  'Умбар',\r\n  'Форност',\r\n  'Хоббитон',\r\n  'Харлонд',\r\n  'Хорнбург',\r\n  'Эгларест',\r\n  'Эдорас',\r\n  'Этринг',\r\n  'Барад-Дур',\r\n  'Дуртанг',\r\n  'Мордор',\r\n  'Дейл',\r\n  'Эребор',\r\n  'Эсгарот',\r\n  'Королевская Гавань',\r\n  'Старомест',\r\n  'Белая Гавань',\r\n  'Ланниспорт',\r\n  'Речные земли',\r\n  'Дорн',\r\n  'Железные острова',\r\n  'Север',\r\n  'Железные острова',\r\n  'Асшай',\r\n  'Вольные города',\r\n  'Хребет Костей',\r\n  'Шир',\r\n  'Нора хоббита',\r\n  'Зелёные Холмы',\r\n  'Залесье'\r\n];\r\n\r\nexport default roomNames;","import Home from \"./home\";\r\n\r\nexport default Home;","import React, { useState, useContext } from 'react';\r\nimport { Link, withRouter  } from 'react-router-dom';\r\nimport { GameContext } from '../app';\r\nimport firebase from '../../firebase/firebase';\r\nimport roomNames from \"../../helpers/roomNames\";\r\nimport { uniqueNamesGenerator } from 'unique-names-generator';\r\n\r\nconst Home = ({ history }) => {\r\n\r\n    const [roomName, setRoomName] = useState('');\r\n    const { user } = useContext(GameContext);\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        if (event.target.value === '') {\r\n            event.target.classList.add(\"is-invalid\");\r\n            event.target.classList.remove(\"is-valid\");\r\n        } else {\r\n            event.target.classList.remove(\"is-invalid\");\r\n            event.target.classList.add(\"is-valid\");\r\n        }\r\n        setRoomName(event.target.value);\r\n    }\r\n\r\n    const generateRoomName = () => {\r\n        setRoomName(uniqueNamesGenerator({dictionaries:[roomNames]}))\r\n    }\r\n\r\n    const logOut = () => {\r\n        firebase.auth().signOut().then(() => {\r\n            history.push('/signin')\r\n        }).catch((error) => {\r\n          // An error happened.\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"home-header d-flex justify-content-between align-items-center\">\r\n                {\r\n                    user.isAnonymous\r\n                      ?\r\n                      <div className=\"profile-avatar \">\r\n                          <img src={user.avatar} alt=\"user-avatar\"/>\r\n                      </div>\r\n                      :\r\n                      <Link to={`/profile/`} className='profile-link d-flex align-items-center'>\r\n                          <div className=\"profile-avatar \">\r\n                              <img src={user.avatar} alt=\"user avatar\"/>\r\n                          </div>\r\n                          <span className='d-flex align-items-center'><i className='icon-left-arrow mr-2'></i> Профиль</span>\r\n                      </Link>\r\n                }\r\n                <button onClick={logOut} className='btn btn-outline d-flex align-items-center'>Выйти <i className=\"icon-log-out ml-2\"></i></button>\r\n            </div>\r\n            <h1>Привет, {user.nickname || user.displayName }!</h1>\r\n            <p>Придумайте с друзьями одинаковые название комнаты и нажмите \"В путь!\"</p>\r\n            <div className=\"form-group\">\r\n                <label htmlFor='roomName'>Название комнаты:</label>\r\n                <div className=\"field d-flex align-items-center\">\r\n                    <input type=\"text\"\r\n                            id=\"roomName\"\r\n                            placeholder=\"Введите название комнаты\"\r\n                            value={roomName}\r\n                            onChange={handleRoomNameChange}\r\n                            className=\"form-control room-name mr-4 w-75\"\r\n                    />\r\n                    <Link\r\n                      to={`/lobby/${roomName}`}\r\n                      className={`enter-room-name-button btn btn-primary flex-shrink-0 ${!roomName ? 'disabled' : 'enabled'}`}\r\n                    >\r\n                        В путь!\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <button className=\"btn btn-info mb-5\" onClick={generateRoomName}>Рандомное название</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home)","import { useEffect, useRef, useState, useContext } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { GameContext } from '../app';\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // Name of the event\r\nconst NEW_SKILLS_EVENT = \"newSkillsEvent\";\r\nconst NEW_ROOM_CONNECTION = \"newRoomConnection\";\r\nconst ROOM_IS_DELETED = \"roomIsDeleted\";\r\nconst USER_DISCONNECT = \"userDisconnect\";\r\nconst GENERATE_CUBIC_NUMBER = \"generateNumber\";\r\n\r\n// const SOCKET_SERVER_URL = \"/\"; //HEROKU\r\nconst SOCKET_SERVER_URL = \"localhost:4000\"; //Local\r\n\r\nconst useLobby = (roomId) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [connections, setConnections] = useState([]);\r\n    const [timer, setTimer] = useState(null);\r\n    const [isRoomDeleted, setRoomDeleted] = useState(false);\r\n    const [isRoomClosed, setRoomClose] = useState(false);\r\n    const [disconnectedUser, setDisconnectedUser] = useState('');\r\n    const [cubicNumber, setCubicNumber] = useState(1);\r\n    const [cubicToggleAnimate, setCubicToggleAnimate] = useState(false);\r\n    const [cubicAnimation, setCubicAnimation] = useState(false);\r\n    const socketRef = useRef();\r\n    const { user } = useContext(GameContext);\r\n\r\n    useEffect(() => {\r\n\r\n        // Creates a WebSocket connection\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            query: {roomId},\r\n        });\r\n\r\n\r\n        socketRef.current.on(NEW_ROOM_CONNECTION, (connections, closed, disconnectUserId) => {\r\n            const { users, roomName, timer: roomTimer, cubic } = connections\r\n\r\n            if(roomName !== roomId) {\r\n                return\r\n            }\r\n\r\n            if(closed) {\r\n                setRoomClose(closed);\r\n                setDisconnectedUser(disconnectUserId);\r\n            }\r\n\r\n            setConnections((connections) => [...users]);\r\n            setTimer(roomTimer);\r\n            setCubicNumber(cubic);\r\n        })\r\n\r\n        // Listens for incoming messages\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser: message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages) => [...messages, incomingMessage]);\r\n        })\r\n\r\n        socketRef.current.on(ROOM_IS_DELETED, (info) => {\r\n            setRoomDeleted(info);\r\n            setConnections((connections) => []);\r\n        })\r\n\r\n        socketRef.current.on('connect', () => {\r\n\r\n        })\r\n\r\n        socketRef.current.on('connect', () => {\r\n\r\n        })\r\n\r\n        socketRef.current.on(GENERATE_CUBIC_NUMBER, (number) => {\r\n            setCubicAnimation(true);\r\n            setCubicNumber(number);\r\n            setCubicToggleAnimate((cubicToggleAnimate) => !cubicToggleAnimate)\r\n            setTimeout(() => {\r\n                setCubicAnimation(false);\r\n            }, 3000)\r\n        })\r\n\r\n        // Destroys the socket reference\r\n        // when the connection is closed\r\n        return () => {\r\n            socketRef.current.emit(USER_DISCONNECT, user.uid)\r\n            socketRef.current.disconnect();\r\n        }\r\n    }, [roomId]);\r\n\r\n    const sendInitConnection = ({nickname, uid, photoURL, userLevel, userStrength, avatar}) => {\r\n        \r\n        socketRef.current.emit(NEW_ROOM_CONNECTION, {\r\n            name: nickname,\r\n            id: uid,\r\n            level: userLevel,\r\n            strength: userStrength,\r\n            photo: avatar\r\n        });\r\n    }\r\n\r\n    // Sends a message to the server that\r\n    // forwards it to all users in the same room\r\n    const sendMessage = (messageBody, userName) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            body: messageBody,\r\n            user: userName,\r\n            senderId: socketRef.current.id,\r\n        })\r\n    };\r\n\r\n    const sendSkills = (userSkills) => {\r\n        socketRef.current.emit(NEW_SKILLS_EVENT, userSkills)\r\n    }\r\n\r\n    const sendGenerateNumber = () => {\r\n        socketRef.current.emit(GENERATE_CUBIC_NUMBER)\r\n    }\r\n\r\n    return { messages, connections, isRoomDeleted, timer, isRoomClosed, cubicNumber, cubicAnimation, cubicToggleAnimate, disconnectedUser, sendMessage, sendSkills, sendInitConnection, sendGenerateNumber }\r\n}\r\n\r\nexport default useLobby;","import Loading from './loading';\r\n\r\nexport default Loading;","import React from 'react';\r\nimport './loading.scss'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-wrap\">\r\n            <div className=\"loadingio-spinner-magnify-0n35bg6fv0o\">\r\n                <div className=\"ldio-ycn6zcb0j2\">\r\n                    <div>\r\n                        <div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import UserCard from './user-card';\r\n\r\nexport default UserCard;","import React from 'react';\r\nimport './user-card.scss';\r\n\r\nconst UserCard = (props) => {\r\n\r\n    const {\r\n        nickname,\r\n        photoURL,\r\n        userLevel,\r\n        disabledLevelDown,\r\n        userStrength,\r\n        disabledStrengthDown,\r\n        handleSkills,\r\n    } = props;\r\n\r\n    if(!handleSkills) {\r\n        return (\r\n            <div className=\"user-card\">\r\n                <div className=\"user-avatar-card\">\r\n                    <p className=\"nickname\">{nickname}</p>\r\n                    <div className=\"user-sum-skills\">Общий: <span>{userStrength + userLevel}</span></div>\r\n                    <img src={photoURL} alt=\"\" className=\"avatar\"/>\r\n                    <div className=\"user-info\">\r\n                        <div className=\"user-level\">Уровень: <span>{userLevel}</span></div>\r\n                        <div className=\"user-strength\">Сила: <span>{userStrength}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-card user-main\">\r\n            <div className=\"user-avatar-card\">\r\n                <p className=\"nickname\">{nickname}</p>\r\n                <div className=\"user-sum-skills\">Общий: <span>{userStrength + userLevel}</span></div>\r\n                <img src={photoURL} alt=\"\" className=\"avatar\"/>\r\n                <div className=\"user-info\">\r\n                    <div className=\"user-skills user-level\">\r\n                        <button\r\n                          className='btn btn-outline-danger'\r\n                          onClick={() => handleSkills('levelDown')}\r\n                          disabled={disabledLevelDown}\r\n                        >-</button>\r\n                        <p className=\"user-skill-text\">Уровень: <span>{userLevel}</span></p>\r\n                        <button\r\n                          className='btn btn-outline-success'\r\n                          onClick={() => handleSkills('levelUp')}\r\n                        >+</button>\r\n                    </div>\r\n                    <div className=\"user-skills user-strength\">\r\n                        <button\r\n                          onClick={() => handleSkills('strengthDown')}\r\n                          disabled={disabledStrengthDown}\r\n                          className='btn btn-outline-danger'\r\n                        >-</button>\r\n                        <p className=\"user-skill-text\">Сила: <span>{userStrength}</span></p>\r\n                        <button\r\n                          onClick={() => handleSkills('strengthUp')}\r\n                          className='btn btn-outline-success'\r\n                        >+</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","import Dice from \"./dice\";\r\n\r\nexport default Dice;","import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\n\r\nconst Dice = ({number, toggle}) => {\r\n\r\n  return (\r\n    <div className=\"dice-holder\">\r\n      <div className=\"dice\">\r\n        <ol className={`die-list even-roll ${toggle ? 'odd-roll': ''}`} data-roll={number}>\r\n          <li className=\"die-item\" data-side=\"1\">\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n          <li className=\"die-item\" data-side=\"2\">\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n          <li className=\"die-item\" data-side=\"3\">\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n          <li className=\"die-item\" data-side=\"4\">\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n          <li className=\"die-item\" data-side=\"5\">\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n          <li className=\"die-item\" data-side=\"6\">\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n            <span className=\"dot\"></span>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dice;","function msToTime(duration) {\r\n  // let milliseconds = parseInt((duration % 1000) / 100),\r\n  let seconds = parseInt((duration / 1000) % 60),\r\n    minutes = parseInt((duration / (1000 * 60)) % 60),\r\n    hours = parseInt((duration / (1000 * 60 * 60)) % 24);\r\n\r\n  hours = (hours < 10) ? \"0\" + hours : hours;\r\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n  seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n  return hours + \":\" + minutes + \":\" + seconds;\r\n}\r\n\r\nexport {\r\n  msToTime\r\n}","import React, { useState, useContext, useEffect} from 'react';\r\nimport useLobby from \"../hooks/useLobby\";\r\nimport {Link, Redirect, withRouter} from 'react-router-dom';\r\nimport { GameContext } from '../app';\r\nimport Loading from '../loading';\r\nimport UserCard from '../user-card'\r\nimport Dice from \"../dice\";\r\nimport  { msToTime } from '../../helpers/helperFunctions';\r\n\r\nconst Lobby = (props) => {\r\n\r\n    const { user } = useContext(GameContext);\r\n    const { roomId } = props.match.params; // Gets roomId from URL\r\n    const { messages,\r\n            connections,\r\n            isRoomDeleted,\r\n            timer,\r\n            isRoomClosed,\r\n            cubicNumber,\r\n            cubicAnimation,\r\n            cubicToggleAnimate,\r\n            disconnectedUser,\r\n            sendMessage,\r\n            sendSkills,\r\n            sendInitConnection,\r\n            sendGenerateNumber\r\n           } = useLobby(roomId); // Creates a websocket\r\n\r\n    const [newMessage, setNewMessage] = useState(\"\"); // Message to be sent\r\n    const [userLevel, setLevel] = useState(1);\r\n    const [userStrength, setStrength] = useState(0);\r\n    const [timerTime, setTimer] = useState(timer);\r\n    const { uid: userId, nickname, avatar } = user;\r\n    const disabledLevelDown = userLevel < 2;\r\n    const disabledStrengthDown = userStrength === 0;\r\n    \r\n    const handleNewMessageChange = (event) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage, nickname);\r\n        setNewMessage(\"\");\r\n    }\r\n\r\n    const generateNumber = () => {\r\n        sendGenerateNumber();\r\n    }\r\n\r\n    const handleSkills = (action) => {\r\n        switch(action) {\r\n            case 'levelUp':\r\n                setLevel((userLevel) => userLevel + 1);\r\n                break;\r\n            case 'levelDown':\r\n                setLevel((userLevel) => userLevel - 1);\r\n                break;\r\n            case 'strengthUp':\r\n                setStrength((userStrength) => userStrength + 1);\r\n                break;\r\n            case 'strengthDown':\r\n                setStrength((userStrength) => userStrength - 1);\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        sendInitConnection({...user, userLevel, userStrength,});\r\n        return () => {\r\n            console.log(\"Unmount\");\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        sendSkills({userLevel, userStrength, userId});\r\n    }, [userLevel, userStrength])\r\n\r\n\r\n    useEffect(() => {\r\n        setTimer(timer);\r\n\r\n        let inervalId\r\n\r\n        if(timer) {\r\n            inervalId = setInterval(() => {\r\n                setTimer(timerTime => timerTime - 1000);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(inervalId);\r\n        }\r\n    }, [timer, connections])\r\n\r\n    if (isRoomClosed && userId === disconnectedUser) {\r\n        return (\r\n          <Redirect to={{\r\n              pathname: '/error',\r\n              state: {\r\n                  title: 'Ошибка',\r\n                  body: 'Эта комната уже заполнена, максимум 10 игроков',\r\n                  redirectToLink: '/',\r\n                  redirectToText: 'Вернуться назад!'\r\n              }\r\n          }} />\r\n        )\r\n    }\r\n\r\n    if (connections.length === 0) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n\r\n    if (isRoomDeleted) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const anotherConnectedUsers = connections.filter((player) => {\r\n        return player.id !== user.uid\r\n    })\r\n\r\n    let winner = connections.find((el) => {\r\n        return el.level === 10;\r\n    })\r\n\r\n    return (\r\n        <div className='lobby-wrap w-100 text-center'>\r\n            <h1 className='mt-0 mb-2'>Комната: {roomId}</h1>\r\n            <p>Эта комната удалится через: {msToTime(timerTime)}</p>\r\n            {\r\n                winner\r\n                  ?\r\n                  <div className=\"alert alert-dismissible alert-success\">\r\n                      Воу! <br/>\r\n                      Победил: {winner.name}\r\n                  </div>\r\n                  :\r\n                  null\r\n            }\r\n            <div className=\"header m-auto position-relative\">\r\n              <UserCard\r\n                nickname={nickname}\r\n                photoURL={avatar}\r\n                userLevel={userLevel}\r\n                disabledLevelDown={disabledLevelDown}\r\n                userStrength={userStrength}\r\n                disabledStrengthDown={disabledStrengthDown}\r\n                handleSkills={handleSkills}/>\r\n              <div className=\"cubic-wrap\">\r\n                <button className=\"cubic-btn\" onClick={generateNumber} disabled={cubicAnimation}>\r\n                  <Dice number={cubicNumber} toggle={cubicToggleAnimate}></Dice>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {\r\n                    anotherConnectedUsers.map((user, i) => (\r\n                        <div className=\"col-6\" key={i}>\r\n                            <UserCard \r\n                                nickname={user.name}\r\n                                photoURL={user.photo}\r\n                                userLevel={user.level}\r\n                                userStrength={user.strength}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className=\"area-wrap\">\r\n                <div className=\"messages-container\">\r\n                    <ul className=\"messages-list\">\r\n                        {\r\n                            messages.map((message, i) => (\r\n                                <li\r\n                                    key={i}\r\n                                    className={`message-item ${\r\n                                        message.ownedByCurrentUser \r\n                                        ? \r\n                                            \"my-message\" \r\n                                        :\r\n                                            \"received-message\"}`}\r\n                                >\r\n                                    <span>{message.user}:</span><br/>\r\n                                    {message.body}\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n              <div className=\"textarea-wrap position-relative w-100\">\r\n                <textarea\r\n                    value={newMessage}\r\n                    onChange={handleNewMessageChange}\r\n                    placeholder=\"Write message...\"\r\n                    className=\"new-message-input\"/>\r\n                <button onClick={handleSendMessage} className=\"send-message-button\">\r\n                    <i className='icon-send'></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Lobby);","import Lobby from \"./lobby\";\r\n\r\nexport default Lobby;","import SignIn from './signin';\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nconst SignIn = ({ googleLogin, anonymousLogin }) => {\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text-center mb-5\">\r\n                <h1>Привет!</h1>\r\n                <button type=\"button\" className=\"btn btn-primary mb-3 d-inline-flex align-items-center\" onClick={googleLogin}><i className='icon-google mr-2'></i> Войти через Google</button>\r\n                <p>После входа в приложение через Google, ты сможешь сменить никнейм и аватар</p>\r\n                <p>или</p>\r\n                <button type=\"button\" className=\"btn btn-secondary mb-3 d-inline-flex align-items-center\" onClick={anonymousLogin}><i className='icon-anonymous mr-2'></i>Войти как гость*</button>\r\n                <p>*Будет присвоен рандомный никнейм и аватар</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import Modal from './modal';\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react'\r\n\r\nconst Modal = ({show, title, children, save, setModal, disableSave}) => {\r\n\r\n    \r\n    return (\r\n        <div className={`modal ${show ? 'd-block' : 'd-none'}`}>\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setModal(false)}>\r\n                    <span aria-hidden=\"true\" >&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {children}\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className={`btn btn-primary ${disableSave ? 'd-none' : ''}`}  onClick={() => save}>Сохранить</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => setModal(false)}>Закрыть</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import ancient from '../../images/ancient.png';\r\nimport baby from '../../images/baby.png';\r\nimport crabs from '../../images/crabs.png';\r\nimport elf from '../../images/elf.png';\r\nimport geek from '../../images/geek.png';\r\nimport goblin from '../../images/goblin.png';\r\nimport goose from '../../images/goose.png';\r\nimport krisotka from '../../images/krisotka.png';\r\nimport munchkin from '../../images/munchkin.png';\r\nimport thief from '../../images/thief.png';\r\nimport troll from '../../images/troll.png';\r\nimport warrior from '../../images/warrior.png';\r\nimport boromir from '../../images/boromir.jpg';\r\nimport frodo from '../../images/frodo.jpg';\r\nimport gendalf from '../../images/gendalf.jpg';\r\nimport gollum from '../../images/gollum.jpg';\r\n\r\nconst imagesPathsArr = [ancient, baby, crabs, elf, geek, goblin, goose, krisotka, munchkin, thief, troll, warrior, boromir, frodo, gendalf, gollum];\r\n\r\nlet getRandomPath = imagesPathsArr[Math.floor(Math.random() * imagesPathsArr.length)];\r\n\r\nexport {getRandomPath}\r\nexport default imagesPathsArr;","export default __webpack_public_path__ + \"static/media/ancient.a0dae3df.png\";","export default __webpack_public_path__ + \"static/media/baby.244b91b7.png\";","export default __webpack_public_path__ + \"static/media/crabs.eef293ba.png\";","export default __webpack_public_path__ + \"static/media/elf.22aa2bd6.png\";","export default __webpack_public_path__ + \"static/media/geek.e85d9a46.png\";","export default __webpack_public_path__ + \"static/media/goblin.5438a933.png\";","export default __webpack_public_path__ + \"static/media/goose.044ea5b3.png\";","export default __webpack_public_path__ + \"static/media/krisotka.d6650593.png\";","export default __webpack_public_path__ + \"static/media/munchkin.d245a994.png\";","export default __webpack_public_path__ + \"static/media/thief.d826a142.png\";","export default __webpack_public_path__ + \"static/media/troll.fd431f4f.png\";","export default __webpack_public_path__ + \"static/media/warrior.b7c10044.png\";","export default __webpack_public_path__ + \"static/media/boromir.752e3c34.jpg\";","export default __webpack_public_path__ + \"static/media/frodo.21bbee36.jpg\";","export default __webpack_public_path__ + \"static/media/gendalf.a8b98dfb.jpg\";","export default __webpack_public_path__ + \"static/media/gollum.a452aa12.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport imagesPathsArr from '../../helpers/imagesPath'\r\n\r\nfunction AvatarConstructor (checked, src, id) {\r\n    this.checked = checked;\r\n    this.src = src;\r\n    this.id = id;\r\n}\r\n\r\nconst Avatars = ({chooseAvatar, googlePhoto}) => {\r\n\r\n    const avatars = [];\r\n    avatars.push(new AvatarConstructor(false, googlePhoto, 0));\r\n\r\n    for(let i = 0; i < imagesPathsArr.length; i++) {\r\n        avatars.push(new AvatarConstructor(false, imagesPathsArr[i], i + 1))\r\n    }\r\n\r\n    const [avatarsArr, setAvatars] = useState(avatars);\r\n\r\n    const toggleChecked = (avatarId, avatarSrc) => {\r\n        const newAvatars = [...avatarsArr];\r\n\r\n        newAvatars.forEach((el) => {\r\n            el.checked = false\r\n            if(el.id === avatarId) {\r\n                el.checked = !el.checked;\r\n                chooseAvatar(el.src);\r\n            }\r\n        })\r\n      \r\n        setAvatars(newAvatars)\r\n    }\r\n\r\n    return (\r\n         <ul className=\"avatars-list d-flex flex-wrap\">\r\n            {\r\n            avatarsArr.map((avatar, i) => (\r\n                <li key={i} className={`${avatar.checked ? 'checked' : ''}`}>\r\n                    <div className='avatars-list-item avatar-holder' onClick={() => toggleChecked(avatar.id, avatar.src)}>\r\n                        <img src={avatar.src}/>\r\n                    </div>\r\n                </li>\r\n            ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Avatars","import Avatars from './avatars';\r\n\r\nexport default Avatars;","import Profile from \"./profile\";\r\n\r\nexport default Profile;","import React, { useContext, useState, useEffect } from 'react';\r\nimport Modal from '../modal';\r\nimport { GameContext } from '../app';\r\nimport { Link, withRouter  } from 'react-router-dom';\r\nimport Avatars from '../avatars';\r\nimport { writeUserData } from '../../firebase/firebase'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user } = useContext(GameContext);\r\n    let { nickname, avatar, photoURL } = user;\r\n\r\n    const [newPhoto, setNewPhoto] = useState(avatar);\r\n    const [newNickname, setNewNickname] = useState(nickname);\r\n    const [resultText, setResultText] = useState('');\r\n    const [disableBtn, setDisableBtn] = useState(false)\r\n    let [modal, setModal] = useState(false);\r\n   \r\n    const chooseAvatar = (src) => {\r\n        setResultText('');\r\n        setNewPhoto(src)\r\n    }\r\n\r\n    const onChangeNickname = (event) => {\r\n        setResultText('');\r\n        let length = event.target.value.length;\r\n        if (length === 0 || length > 30) {\r\n            event.target.classList.add(\"is-invalid\");\r\n            event.target.classList.remove(\"is-valid\");\r\n            setDisableBtn(true);\r\n        } else {\r\n            event.target.classList.remove(\"is-invalid\");\r\n            event.target.classList.add(\"is-valid\");\r\n            setNewNickname(event.target.value);\r\n            setDisableBtn(false);\r\n        }\r\n    }\r\n\r\n    const saveData = () => {\r\n        let updatedUser = Object.assign(user);\r\n        updatedUser.nickname = newNickname;\r\n        updatedUser.avatar = newPhoto;\r\n        writeUserData(updatedUser).then(data => {\r\n            setResultText(data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"profile-wrap\">\r\n                <Link to={'/'} className=\"icon-return\"></Link>\r\n                <h1 className='text-center'>Профиль</h1>\r\n                <div className='avatar-holder'>\r\n                    <img src={newPhoto} alt='avatar'/>\r\n                </div>\r\n                <button onClick={() => setModal(modal => !modal)} className='btn btn-info d-flex align-items-center mt-2 mr-auto ml-auto mb-3'>Изменить аватар <i className='icon-edit ml-2'></i> </button>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-control-label\" htmlFor=\"nickname\">Никнейм:</label>\r\n                    <input className=\"form-control\" id=\"nickname\" defaultValue={nickname} onChange={onChangeNickname}/>\r\n                </div>\r\n                {resultText ? <p className='text-success'>{resultText}</p> : null}\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={saveData} disabled={disableBtn}>Сохранить</button>\r\n            </div>\r\n            <Modal title=\"Изменить аватар\" show={modal} setModal={setModal} disableSave={true}>\r\n                <Avatars chooseAvatar={chooseAvatar} googlePhoto={photoURL}/>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile);","import Error from './error';\r\n\r\nexport default Error;","import React, { useState, useEffect }  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Error = (props) => {\r\n\r\n  const [title, setTitle] = useState('Ошибка :(');\r\n  const [body, setBody] = useState('Что-то пошло не так.');\r\n  const [redirectToLink, setRedirectToLink] = useState('/');\r\n  const [redirectToText, setRedirectToText] = useState('Вернуться на главную');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const {title, body, redirectToLink, redirectToText} = props.location.state;\r\n      setTitle(title);\r\n      setBody(body);\r\n      setRedirectToLink(redirectToLink);\r\n      setRedirectToText(redirectToText);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <p>{body}</p>\r\n      <Link className=\"btn btn-primary\" to={redirectToLink}>{redirectToText}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error;","import React, { useState, useEffect } from 'react';\r\nimport firebase, { authProvider, writeUserData, getUserData } from '../../firebase/firebase';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { uniqueNamesGenerator, names } from 'unique-names-generator';\r\nimport Home from \"../home\";\r\nimport Lobby from \"../lobby\";\r\nimport SignIn from '../signin'\r\nimport Profile from '../profile';\r\nimport Loading from '../loading';\r\nimport Error from \"../error\";\r\nimport { getRandomPath } from '../../helpers/imagesPath';\r\nimport ErrorBoundary from \"../error-boundary\";\r\n\r\nconst GameContext = React.createContext('');\r\n\r\nconst App = () => {\r\n\r\n  const [user, setUser] = useState(null)\r\n  const [loading, setLoading] = useState(true);\r\n  const [login, setLogin] = useState(false);\r\n\r\n  const googleLogin = () => {\r\n    firebase.auth()\r\n      .signInWithPopup(authProvider)\r\n      .then((result) => {\r\n\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        let credential = result.credential;\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        let token = credential.accessToken;\r\n        // The signed-in user info.\r\n\r\n      }).catch((error) => {\r\n        // Handle Errors here.\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        let email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        let credential = error.credential;\r\n        console.log('errorCode:' , errorCode);\r\n        console.log('errorMessage:' , errorMessage)\r\n        console.log('email:' , email)\r\n        console.log('credential:' , credential)\r\n      });\r\n  }\r\n\r\n  const anonymousLogin = () => {\r\n    firebase.auth().signInAnonymously()\r\n            .then((data) => {\r\n              setLogin(true)\r\n            })\r\n            .catch((error) => {\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n    }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      setLoading(true);\r\n      if (user) {\r\n\r\n        if(user.isAnonymous) {\r\n          const randomName = uniqueNamesGenerator({ dictionaries: [names] });\r\n          const {uid} = user;\r\n          let avatar = getRandomPath;\r\n          setUser( {\r\n            photoURL: avatar,\r\n            avatar: avatar,\r\n            uid,\r\n            nickname: randomName,\r\n            isAnonymous: true\r\n          });\r\n          setLoading(false);\r\n          return\r\n        }\r\n\r\n        const {uid, displayName, email, photoURL} = user;\r\n        let nickname = displayName;\r\n        let avatar = photoURL;\r\n\r\n        getUserData().then((data) => {\r\n          if(data) {\r\n            setUser(data);\r\n            setLoading(false);\r\n          } else {\r\n            writeUserData({uid, displayName, email, photoURL, avatar, nickname})\r\n              .then((data) => {\r\n                if(data !== 'error') {\r\n                  setUser({uid, displayName, email, photoURL, avatar, nickname})\r\n                  setLogin(true)\r\n                  setLoading(false)\r\n                }\r\n              });\r\n          }\r\n        })\r\n      } else {\r\n        setUser(null);\r\n        setLoading(false);\r\n        setLogin(false)\r\n      }\r\n    })\r\n\r\n  }, [login]);\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <Loading/>\r\n    )\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <>\r\n        <h1 className=\"m-b-5 m-t-5 text-center logo\">Munchkin</h1>\r\n        <SignIn googleLogin={googleLogin} anonymousLogin={anonymousLogin}/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={{user, googleLogin, anonymousLogin}}>\r\n      <Router>\r\n        <h1 className=\"m-b-5 m-t-5 text-center logo\">Munchkin</h1>\r\n        <div className=\"container\">\r\n            <Switch>\r\n                <Route exact path=\"/profile/\" component={Profile} />\r\n                <Route exact path=\"/lobby/:roomId/\" component={Lobby} />\r\n                <Route exact path=\"/error\" render={(props) => <Error {...props}/>}/>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport { GameContext }\r\n\r\nexport default App;","import React  from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Можно отрендерить запасной UI произвольного вида\r\n      return(\r\n        <React.Fragment>\r\n          <h1>Что-то пошло не так.</h1>\r\n          <Link to={'/'} className={'btn btn-primary'}>Вернуться на главную</Link>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import App, { GameContext } from './app';\r\n\r\nexport { GameContext };\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}